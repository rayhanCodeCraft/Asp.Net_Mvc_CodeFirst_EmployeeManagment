@model PagedList.PagedList<CodeFirstEmployee.Models.Employee>
@using PagedList.Mvc

<link href="~/Content/PagedList.css" rel="stylesheet" />
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2 class="mt-4">Employee List</h2>

<div class="row">
    <div class="col-md-12">
        <div class="card shadow-sm">
            <div class="card-header bg-dark text-white d-flex justify-content-between align-items-center">
                <h4 class="mb-0">Employees</h4>
                <a href="@Url.Action("Create", "Employee")" class="btn btn-primary">Create New Employee</a>
            </div>

            <div class="card-body">
                @using (Html.BeginForm())
                {
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" placeholder="Search by Name" name="SearchString" value="@ViewBag.currentFilter" />
                        <button class="btn btn-secondary" type="submit">Search</button>
                    </div>
                }

                <table class="table table-hover table-striped">
                    <thead class="table-dark">
                        <tr>
                            <th>Employee Id</th>
                            <th>
                                @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm }, new { @class = "text-white" })
                            </th>
                            <th>
                                @Html.ActionLink("Birth Date", "Index", new { sortOrder = ViewBag.DateSortParm }, new { @class = "text-white" })
                            </th>
                            <th>Picture</th>
                            <th>Email</th>
                            <th>Salary</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(e => item.EmployeeId)</td>
                                <td>@Html.DisplayFor(e => item.EmployeeName)</td>
                                <td>@Html.DisplayFor(e => item.JoinDate)</td>
                                <td>
                                    <img src="@item.Picture" class="img-thumbnail" width="80" height="80" alt="Employee Picture" />
                                </td>
                                <td>@Html.DisplayFor(e => item.Email)</td>
                                <td>@Html.DisplayFor(e => item.Salary)</td>
                                <td>
                                    <a href="@Url.Action("Edit", "Employee", new { id = item.EmployeeId })" class="btn btn-sm btn-info">Edit</a>
                                    <a href="@Url.Action("Delete", "Employee", new { id = item.EmployeeId })" class="btn btn-sm btn-danger">Delete</a>
                                </td>
                            </tr>

                            if (item.QualificationEntries.Any())
                            {
                                <tr>
                                    <td colspan="5">
                                        <table class="table table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>Qualification Id</th>
                                                    <th>Qualification Name</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item2 in item.QualificationEntries)
                                                {
                                                    <tr>
                                                        <td>@Html.DisplayFor(x => item2.Qualification.QualificationId)</td>
                                                        <td>@Html.DisplayFor(x => item2.Qualification.QualifcationName)</td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>

                <div class="d-flex justify-content-between">
                    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                </div>
            </div>
        </div>
    </div>
</div>











@*<h2>Employee List</h2>
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div>
                        <a href="@Url.Action("Create","Employee")">Create New Employee</a>
                    </div>
                    @using (Html.BeginForm())
                    {
                        <p>
                            Find by Name: @Html.TextBox("SearchString", ViewBag.currentFilter as string)
                            <input type="submit" value="Search" />
                        </p>
                    }
                </div>
                <div class="card-body">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Employee Id</th>
                                <th>@Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm })</th>
                                <th>@Html.ActionLink("Birth Date", "Index", new { sortOrder = ViewBag.DateSortParm })</th>
                                <th>Picture</th>
                                <th>Email</th>
                                <th>Salary</th>

                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(e => item.EmployeeId)</td>
                                    <td>@Html.DisplayFor(e => item.EmployeeName)</td>
                                    <td>@Html.DisplayFor(e => item.JoinDate)</td>

                                    <td><img src="@item.Picture" width="80" height="80" /></td>

                                    <td>@Html.DisplayFor(e => item.Email)</td>
                                    <td>@Html.DisplayFor(e => item.Salary)</td>
                                    <td>
                                        <a href="@Url.Action("Edit", "Employee", new { id = item.EmployeeId })">Edit</a> |
                                        <a href="@Url.Action("Delete", "Employee", new { id = item.EmployeeId })">Delete</a>
                                    </td>
                                </tr>
                                if (item.QualificationEntries.Any())
                                {
                                    <tr>
                                        <td colspan="5">
                                            <table class="table table-bordered">
                                                <thead>
                                                    <tr>
                                                        <th>Qualification Id</th>
                                                        <th>Qualification Name</th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item2 in item.QualificationEntries)
                                                    {
                                                        <tr>
                                                            <td>@Html.DisplayFor(x => item2.Employee.EmployeeId)</td>
                                                            <td>@Html.DisplayFor(x => item2.Employee.EmployeeId)</td>
                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                    <div class="pagination">
                        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
                        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
                    </div>
                </div>
            </div>
        </div>
    </div>*@